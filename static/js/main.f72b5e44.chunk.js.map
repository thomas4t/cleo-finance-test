{"version":3,"sources":["components/Layout/Navbar.js","components/Layout/MainContainer.js","components/HomePage/search/UserSearch.js","components/HomePage/userInfo/UserBio.js","components/HomePage/userInfo/UserDetails.js","components/HomePage/userInfo/UserDetailsContainer.js","components/HomePage/index.js","components/RepositoriesPage/ReposFilters.js","components/RepositoriesPage/ReposTable.js","components/RepositoriesPage/ReposWrapper.js","components/RepositoriesPage/index.js","components/DetailedRepo/DetailsContainer.js","components/DetailedRepo/index.js","App.js","store/rematchModels/models.js","store/index.js","index.js"],"names":["StyledNav","styled","div","StyledLink","Link","Navbar","props","to","MainContainer","StyledForm","Form","UserSearch","initialValues","query","validationSchema","Yup","min","max","required","matches","onSubmit","values","handleFormSubmit","id","name","type","placeholder","component","disabled","fetchingUsers","StyledDiv","LoaderDiv","UserBio","fetchingUserBio","color","height","width","isBioDisplayed","userDetailedInfo","public_repos","bio","UserDiv","UserDetails","React","useState","setUserDetailedInfo","setFetchingUserBio","setIsBioDisplayed","dispatch","useDispatch","fetchUserBio","a","axios","get","response","data","fetchUserRepos","login","fetchingUsersRepos","set","selectedUsersRepos","className","src","user","avatar_url","alt","href","html_url","target","rel","onClick","DetailsContainer","UserDetailsContainer","searchResults","useSelector","state","length","map","key","Home","setFetchingUsers","fetchUsers","items","StyledInputDiv","ReposFilters","onChange","handleFilterByNameChange","handleStarFilterChange","TableContainer","ReposTable","displayedRepos","setDisplayedRepos","isStarFilterOn","setIsStarFiterOn","useEffect","sortReposByStars","cloned","sort","b","stargazers_count","filterReposByName","newRepos","filter","repo","includes","e","filterVal","value","checked","svn_url","detailedRepo","handleRouteToDetailsClick","ReposWrapper","owner","UserRepos","full_name","description","created_at","language","DetailedRepo","App","path","exact","reducers","payload","store","init","models","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f72b5e44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #fff;\r\n  padding: 1vmin;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  padding: 10px 2vmin;\r\n  text-decoration: none;\r\n  color: #000;\r\n  :hover {\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <StyledNav>\r\n      <StyledLink to=\"/\">\r\n        <strong>Find a user</strong>\r\n      </StyledLink>\r\n      <StyledLink to=\"/user-repos\">\r\n        <strong>User's repositories</strong>\r\n      </StyledLink>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainContainer = styled.div`\r\n  text-align: center;\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n  .colorTest {\r\n    color: #61dafb;\r\n  }\r\n`;\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  #queryInput {\r\n    div {\r\n      color: #61dafb;\r\n      font-size: calc(10px + 0.8vmin);\r\n    }\r\n  }\r\n  input {\r\n    padding: 10px 20px;\r\n    outline: none;\r\n    margin-top: 10%;\r\n    border: none;\r\n    border-radius: 5px;\r\n  }\r\n  input:hover,\r\n  input:focus {\r\n    border: 2px solid #61dafb;\r\n    padding: 8px 18px;\r\n  }\r\n\r\n  button {\r\n    background-color: #000;\r\n    color: #fff;\r\n    text-decoration: none;\r\n    padding: 10px 20px 10px 20px;\r\n    margin: 1%;\r\n    border: 1px solid white;\r\n    border-radius: 10px;\r\n    font-weight: 700;\r\n    outline: none;\r\n  }\r\n  button:hover {\r\n    color: #61dafb;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n  }\r\n  button:disabled,\r\n  button[disabled] {\r\n    border: 1px solid #999999;\r\n    background-color: #cccccc;\r\n    color: #666666;\r\n  }\r\n`;\r\n\r\nconst UserSearch = (props) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{ query: \"\" }}\r\n        validationSchema={Yup.object({\r\n          query: Yup.string()\r\n            .min(3, \"Must be 3 characters or more\")\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Cannot be empty\")\r\n            .matches(\r\n              /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/i,\r\n              \"Invalid user name\"\r\n            ),\r\n        })}\r\n        onSubmit={(values) => {\r\n          props.handleFormSubmit(values.query);\r\n        }}\r\n      >\r\n        <StyledForm>\r\n          <div id=\"queryInput\">\r\n            <Field name=\"query\" type=\"text\" placeholder=\"Find a user\" />\r\n            <ErrorMessage name=\"query\" component=\"div\" />\r\n          </div>\r\n          <button type=\"submit\" disabled={props.fetchingUsers}>\r\n            Search\r\n          </button>\r\n        </StyledForm>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserSearch;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst StyledDiv = styled.div`\r\n  font-size: 0.7em;\r\n`;\r\n\r\nconst LoaderDiv = styled.div`\r\n  margin: 10%;\r\n`;\r\n\r\nconst UserBio = (props) => {\r\n  //Loader\r\n  if (props.fetchingUserBio) {\r\n    return (\r\n      <LoaderDiv>\r\n        <ReactLoading\r\n          type={\"cylon\"}\r\n          color={\"#61dafb\"}\r\n          height={\"10%\"}\r\n          width={\"10%\"}\r\n        />\r\n      </LoaderDiv>\r\n    );\r\n  }\r\n  //Deciding whether bio gets rendered or not\r\n  if (!props.isBioDisplayed) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <StyledDiv>\r\n        <p>\r\n          Amount of public repositories: {props.userDetailedInfo.public_repos}\r\n        </p>\r\n        <p>\r\n          Name:{\" \"}\r\n          {props.userDetailedInfo.name === null\r\n            ? \"Not provided\"\r\n            : props.userDetailedInfo.name}\r\n        </p>\r\n        <p>\r\n          Bio:{\" \"}\r\n          {props.userDetailedInfo.bio === null\r\n            ? \"Not provided\"\r\n            : props.userDetailedInfo.bio}\r\n        </p>\r\n      </StyledDiv>\r\n    );\r\n  }\r\n};\r\n\r\nexport default UserBio;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport UserBio from \"./UserBio\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst UserDiv = styled.div`\r\n  display: flex;\r\n  align-self: flex-start;\r\n  height: auto;\r\n  margin: 1vmin auto;\r\n  img {\r\n    width: 10vmin;\r\n    height: 10vmin;\r\n    min-width: 50px;\r\n    min-height: 50px;\r\n  }\r\n  .avatarDiv {\r\n    width: 25%;\r\n    display: flex;\r\n    align-self: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n  }\r\n  .descriptionDiv {\r\n    width: 75%;\r\n    text-align: left;\r\n    span {\r\n      a {\r\n        color: #fff;\r\n        text-decoration: none;\r\n      }\r\n      a:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n  }\r\n  .userBio {\r\n    display: block;\r\n    padding: 1px;\r\n    font-size: 0.6em;\r\n    font-weight: bold;\r\n    text-decoration: underline;\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    color: #61dafb;\r\n    :hover {\r\n      color: #fff;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .userReposBtn {\r\n    font-size: 1rem;\r\n    button {\r\n      background-color: rgba(255, 255, 255, 0.9);\r\n      color: #000;\r\n      border: none;\r\n      text-decoration: none;\r\n      padding: 5px 10px;\r\n      margin: 10px 0 10px 0;\r\n      border-radius: 10px;\r\n      font-weight: 700;\r\n      outline: none;\r\n    }\r\n    button:hover {\r\n      color: #000;\r\n      background-color: rgba(255, 255, 255, 0.7);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst UserDetails = (props) => {\r\n  const [userDetailedInfo, setUserDetailedInfo] = React.useState(null);\r\n  const [fetchingUserBio, setFetchingUserBio] = React.useState(false);\r\n  const [isBioDisplayed, setIsBioDisplayed] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchUserBio = async (name) => {\r\n    setFetchingUserBio(true);\r\n    const response = await axios.get(`https://api.github.com/users/${name}`);\r\n    setUserDetailedInfo(response.data);\r\n    setFetchingUserBio(false);\r\n  };\r\n\r\n  const fetchUserRepos = async (login) => {\r\n    //set loading to true\r\n    dispatch.fetchingUsersRepos.set(true);\r\n    const response = await axios.get(\r\n      `https://api.github.com/users/${login}/repos`\r\n    );\r\n    dispatch.selectedUsersRepos.set(response.data);\r\n    //set loading to false\r\n    dispatch.fetchingUsersRepos.set(false);\r\n  };\r\n\r\n  const handleOnShowReposClick = (user) => {\r\n    fetchUserRepos(user.login);\r\n  };\r\n  const handleOnShowBioClick = () => {\r\n    setIsBioDisplayed(true);\r\n    if (userDetailedInfo === null) {\r\n      fetchUserBio(props.user.login);\r\n    }\r\n  };\r\n  const handleOnHideBioClick = () => {\r\n    setIsBioDisplayed(false);\r\n  };\r\n\r\n  return (\r\n    <UserDiv>\r\n      <div className=\"avatarDiv\">\r\n        <img src={props.user.avatar_url} alt={props.user.login}></img>\r\n      </div>\r\n      <div className=\"descriptionDiv\">\r\n        <span>\r\n          <a\r\n            name=\"users-name\"\r\n            href={props.user.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {props.user.login}\r\n          </a>\r\n        </span>\r\n        {!isBioDisplayed ? (\r\n          <button\r\n            className=\"userBio\"\r\n            onClick={() => handleOnShowBioClick()}\r\n            disabled={fetchingUserBio}\r\n          >\r\n            Show more info\r\n          </button>\r\n        ) : (\r\n          <button className=\"userBio\" onClick={() => handleOnHideBioClick()}>\r\n            Hide info\r\n          </button>\r\n        )}\r\n        <UserBio\r\n          userDetailedInfo={userDetailedInfo}\r\n          fetchingUserBio={fetchingUserBio}\r\n          isBioDisplayed={isBioDisplayed}\r\n        />\r\n\r\n        <div className=\"userReposBtn\">\r\n          <Link to=\"/user-repos\">\r\n            <button onClick={() => handleOnShowReposClick(props.user)}>\r\n              Show user's repos\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </UserDiv>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UserDetails from \"./UserDetails\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DetailsContainer = styled.div`\r\n  width: 40vw;\r\n  margin: auto;\r\n  padding: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  @media only screen and (max-width: 1200px) {\r\n    width: 60vw;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 80vw;\r\n  }\r\n  @media only screen and (max-width: 480px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\nconst LoaderDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 5%;\r\n`;\r\n\r\nconst UserDetailsContainer = (props) => {\r\n  const searchResults = useSelector((state) => state.searchResults);\r\n  if (props.fetchingUsers) {\r\n    return (\r\n      <LoaderDiv>\r\n        <ReactLoading\r\n          type={\"spin\"}\r\n          color={\"#61dafb\"}\r\n          height={\"10%\"}\r\n          width={\"10%\"}\r\n        />\r\n      </LoaderDiv>\r\n    );\r\n  }\r\n  if (searchResults === null) {\r\n    return <p>Enter a username first</p>;\r\n  } else if (searchResults.length === 0) {\r\n    return <p>No results found</p>;\r\n  } else {\r\n    return (\r\n      <DetailsContainer>\r\n        {searchResults.map((user) => {\r\n          return <UserDetails key={user.id} user={user} />;\r\n        })}\r\n      </DetailsContainer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default UserDetailsContainer;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport MainContainer from \"../Layout/MainContainer\";\r\nimport UserSearch from \"./search/UserSearch\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport UserDetailsContainer from \"./userInfo/UserDetailsContainer\";\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [fetchingUsers, setFetchingUsers] = React.useState(false);\r\n\r\n  const fetchUsers = async (query) => {\r\n    setFetchingUsers(true);\r\n    const response = await axios.get(\r\n      `https://api.github.com/search/users?q=${query}`\r\n    );\r\n    dispatch.searchResults.set(response.data.items);\r\n    setFetchingUsers(false);\r\n  };\r\n\r\n  const handleFormSubmit = (query) => {\r\n    fetchUsers(query);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <UserSearch\r\n        handleFormSubmit={handleFormSubmit}\r\n        fetchingUsers={fetchingUsers}\r\n      />\r\n      <UserDetailsContainer fetchingUsers={fetchingUsers} />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst StyledInputDiv = styled.div`\r\n  width: 40vw;\r\n  margin: auto;\r\n  padding: 1% 0 2%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  user-select: none;\r\n  @media only screen and (max-width: 1200px) {\r\n    width: 75vw;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 85vw;\r\n  }\r\n  @media only screen and (max-width: 480px) {\r\n    width: 95vw;\r\n  }\r\n  .text-input {\r\n    padding: 10px 20px;\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 5px;\r\n  }\r\n  .text-input:hover,\r\n  .text-input:focus {\r\n    border: 2px solid #61dafb;\r\n    padding: 8px 18px;\r\n  }\r\n  label {\r\n    padding-left: 2%;\r\n    input {\r\n      margin: 10px;\r\n    }\r\n    input:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  label:hover {\r\n    color: #61dafb;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ReposFilters = (props) => {\r\n  return (\r\n    <StyledInputDiv>\r\n      <input\r\n        className=\"text-input\"\r\n        type=\"text\"\r\n        placeholder=\"Filter repos by name\"\r\n        onChange={props.handleFilterByNameChange}\r\n      />\r\n      <label>\r\n        Sort by star gazers\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          onClick={props.handleStarFilterChange}\r\n        ></input>\r\n      </label>\r\n    </StyledInputDiv>\r\n  );\r\n};\r\n\r\nexport default ReposFilters;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ReposFilters from \"./ReposFilters\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TableContainer = styled.div`\r\n  width: 40vw;\r\n  margin: auto;\r\n  padding: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 10px;\r\n  @media only screen and (max-width: 1200px) {\r\n    width: 75vw;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 85vw;\r\n  }\r\n  @media only screen and (max-width: 480px) {\r\n    width: 95vw;\r\n  }\r\n  table {\r\n    width: 100%;\r\n    margin: auto;\r\n    border: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-radius: 5px;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    th {\r\n      font-size: 1em;\r\n    }\r\n    .th-star-gazers {\r\n      padding: 0 2%;\r\n    }\r\n    .name {\r\n      text-align: left;\r\n      font-size: 0.9em;\r\n      padding-left: 5%;\r\n      a {\r\n        text-decoration: none;\r\n        color: #fff;\r\n      }\r\n      a:hover {\r\n        color: #61dafb;\r\n      }\r\n      span {\r\n        padding-left: 2%;\r\n        a {\r\n          font-size: 0.75em;\r\n          color: #61dafb;\r\n        }\r\n        a:hover {\r\n          color: rgba(255, 255, 255, 0.8);\r\n        }\r\n      }\r\n    }\r\n    .star-gazers {\r\n      text-align: center;\r\n      font-size: 0.9em;\r\n      padding-right: 2%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ReposTable = (props) => {\r\n  const dispatch = useDispatch();\r\n  const selectedUsersRepos = useSelector((state) => state.selectedUsersRepos);\r\n  const [displayedRepos, setDisplayedRepos] = React.useState(\r\n    selectedUsersRepos\r\n  );\r\n  const [isStarFilterOn, setIsStarFiterOn] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setDisplayedRepos(selectedUsersRepos);\r\n  }, [selectedUsersRepos]);\r\n\r\n  const handleFilterByNameChange = (e) => {\r\n    let filterVal = e.target.value;\r\n    filterReposByName(filterVal);\r\n  };\r\n  const handleStarFilterChange = (e) => {\r\n    setIsStarFiterOn(e.target.checked);\r\n    if (e.target.checked) {\r\n      sortReposByStars();\r\n    }\r\n  };\r\n\r\n  const sortReposByStars = () => {\r\n    const cloned = [...displayedRepos];\r\n    cloned.sort((a, b) => b.stargazers_count - a.stargazers_count);\r\n    setDisplayedRepos(cloned);\r\n  };\r\n  const filterReposByName = (query) => {\r\n    const newRepos = selectedUsersRepos.filter((repo) =>\r\n      repo.name.includes(query)\r\n    );\r\n    //If star filter is on, filter it by stars as well\r\n    //TODO\r\n    //Change sortReposByStars func so that it returns intead of setting\r\n    if (isStarFilterOn) {\r\n      newRepos.sort((a, b) => b.stargazers_count - a.stargazers_count);\r\n      setDisplayedRepos(newRepos);\r\n    } else {\r\n      setDisplayedRepos(newRepos);\r\n    }\r\n  };\r\n  const handleRouteToDetailsClick = (repo) => {\r\n    dispatch.detailedRepo.set(repo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ReposFilters\r\n        handleFilterByNameChange={handleFilterByNameChange}\r\n        handleStarFilterChange={handleStarFilterChange}\r\n      />\r\n      <TableContainer>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th className=\"th-star-gazers\">Star gazers</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayedRepos.map((repo) => {\r\n              return (\r\n                <tr key={repo.id}>\r\n                  <td className=\"name\">\r\n                    <a\r\n                      name=\"repo-name\"\r\n                      href={repo.svn_url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {repo.name}\r\n                    </a>\r\n                    <span>\r\n                      <Link\r\n                        to=\"/detailed-repo\"\r\n                        onClick={() => handleRouteToDetailsClick(repo)}\r\n                      >\r\n                        Show details\r\n                      </Link>\r\n                    </span>\r\n                  </td>\r\n                  <td>{repo.stargazers_count}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReposTable;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ReactLoading from \"react-loading\";\r\nimport ReposTable from \"./ReposTable\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: underline;\r\n  color: #fff;\r\n  :hover {\r\n    color: #61dafb;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst LoaderDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 5%;\r\n`;\r\n\r\nconst ReposWrapper = (props) => {\r\n  const selectedUsersRepos = useSelector((state) => state.selectedUsersRepos);\r\n  const fetchingUsersRepos = useSelector((state) => state.fetchingUsersRepos);\r\n\r\n  //Loader\r\n  if (fetchingUsersRepos) {\r\n    return (\r\n      <LoaderDiv>\r\n        <ReactLoading\r\n          type={\"bars\"}\r\n          color={\"#61dafb\"}\r\n          height={\"10%\"}\r\n          width={\"10%\"}\r\n        />\r\n      </LoaderDiv>\r\n    );\r\n  }\r\n  //Displaying results based on their contents\r\n  if (selectedUsersRepos === null) {\r\n    return <p>You have to select a user first.</p>;\r\n  } else if (selectedUsersRepos.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>\r\n          Unfortunately, selected user does not have any public repositories.\r\n        </p>\r\n        <StyledLink to=\"/\">Try again</StyledLink>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <p>Public repositories of {selectedUsersRepos[0].owner.login}</p>\r\n        <ReposTable />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ReposWrapper;\r\n","import React from \"react\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport MainContainer from \"../Layout/MainContainer\";\r\nimport ReposTable from \"./ReposWrapper\";\r\n\r\nconst UserRepos = (props) => {\r\n  return (\r\n    <MainContainer>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <ReposTable />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default UserRepos;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40vw;\r\n  margin: auto;\r\n  text-align: left;\r\n  .key {\r\n    font-size: 0.9em;\r\n    color: #61dafb;\r\n  }\r\n  .value {\r\n    font-size: 0.8em;\r\n    color: #fff;\r\n  }\r\n\r\n  @media only screen and (max-width: 1200px) {\r\n    width: 60vw;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 80vw;\r\n  }\r\n  @media only screen and (max-width: 480px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nconst DetailsContainer = (props) => {\r\n  const detailedRepo = useSelector((state) => state.detailedRepo);\r\n  if (detailedRepo === null) {\r\n    return <p>Oops, u shouldn't be here. Better select some repo.</p>;\r\n  } else {\r\n    return (\r\n      <StyledDiv>\r\n        <h3>Details</h3>\r\n        <p className=\"key\">\r\n          URL:{\" \"}\r\n          <span>\r\n            <a className=\"value\" href={detailedRepo.html_url}>\r\n              {detailedRepo.html_url}\r\n            </a>\r\n          </span>\r\n        </p>\r\n        <p className=\"key\">\r\n          Full name: <span className=\"value\">{detailedRepo.full_name}</span>\r\n        </p>\r\n        {detailedRepo.description !== null ? (\r\n          <p className=\"key\">\r\n            Description:{\" \"}\r\n            <span className=\"value\">{detailedRepo.description}</span>\r\n          </p>\r\n        ) : (\r\n          <span className=\"value\">Description not provided</span>\r\n        )}\r\n        <p className=\"key\">\r\n          Created at: <span className=\"value\">{detailedRepo.created_at}</span>\r\n        </p>\r\n        <p className=\"key\">\r\n          Language:{\" \"}\r\n          {detailedRepo.language === null ? (\r\n            <span className=\"value\">unknown</span>\r\n          ) : (\r\n            <span className=\"value\">{detailedRepo.language}</span>\r\n          )}\r\n        </p>\r\n        <Link className=\"value\" to=\"/user-repos\">\r\n          Go back to all repos\r\n        </Link>\r\n      </StyledDiv>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DetailsContainer;\r\n","import React from \"react\";\r\n\r\nimport MainContainer from \"../Layout/MainContainer\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport DetailsContainer from \"./DetailsContainer\";\r\n\r\nconst DetailedRepo = (props) => {\r\n  return (\r\n    <MainContainer>\r\n      <header>\r\n        <Navbar />\r\n      </header>\r\n      <DetailsContainer />\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default DetailedRepo;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/HomePage\";\r\nimport UserRepos from \"./components/RepositoriesPage\";\r\nimport DetailedRepo from \"./components/DetailedRepo\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/user-repos\" exact component={UserRepos}></Route>\r\n        <Route path=\"/detailed-repo\" exact component={DetailedRepo}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const searchResults = {\r\n  state: null, // initial state\r\n  reducers: {\r\n    set(state, payload) {\r\n      return payload;\r\n    },\r\n  },\r\n};\r\nexport const selectedUsersRepos = {\r\n  state: null,\r\n  reducers: {\r\n    set(state, payload) {\r\n      return payload;\r\n    },\r\n  },\r\n};\r\nexport const fetchingUsersRepos = {\r\n  state: false,\r\n  reducers: {\r\n    set(state, payload) {\r\n      return payload;\r\n    },\r\n  },\r\n};\r\nexport const detailedRepo = {\r\n  state: null,\r\n  reducers: {\r\n    set(state, payload) {\r\n      return payload;\r\n    },\r\n  },\r\n};\r\n","import { init } from \"@rematch/core\";\r\nimport * as models from \"./rematchModels/models\";\r\n\r\nconst store = init({\r\n  models,\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}